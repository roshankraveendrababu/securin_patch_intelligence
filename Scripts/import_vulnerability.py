import requests
from neo4j import GraphDatabase
import time

# Neo4j Configuration
NEO4J_URI = "bolt://localhost:7687"
NEO4J_USER = "neo4j"
NEO4J_PASSWORD = "123456789"

class VulnerabilityImporter:
    def __init__(self, uri, user, password):
        self.driver = GraphDatabase.driver(uri, auth=(user, password))

    def close(self):
        self.driver.close()

    def fetch_vulnerabilities(self, results_per_page=100):
        """Fetch vulnerabilities from NVD API"""
        url = f"https://services.nvd.nist.gov/rest/json/cves/2.0?resultsPerPage={results_per_page}"
        
        for attempt in range(3):  # Retry up to 3 times
            try:
                response = requests.get(url, timeout=20)
                if response.status_code == 200:
                    return response.json().get("vulnerabilities", [])
            except requests.exceptions.Timeout:
                print(f"⏳ Timeout, retrying ({attempt+1}/3)...")
                time.sleep(5)
            except Exception as e:
                print(f"❌ Error fetching vulnerabilities: {e}")
                return []

        return []

    def insert_vulnerabilities(self):
        """Insert vulnerabilities into Neo4j"""
        vulnerabilities = self.fetch_vulnerabilities()

        with self.driver.session() as session:
            for vuln in vulnerabilities:
                cve = vuln.get("cve", {})
                session.run("""
                    MERGE (v:Vulnerability {vuln_id: $vuln_id})
                    ON CREATE SET 
                        v.description = $description,
                        v.severity = COALESCE($severity, "Unknown"),
                        v.cvss_score = COALESCE($cvss_score, 0.0),
                        v.published_date = COALESCE($published_date, "Unknown"),
                        v.last_modified = COALESCE($last_modified, "Unknown")
                """, 
                vuln_id=cve.get("id", "Unknown"),
                description=cve.get("descriptions", [{}])[0].get("value", "No Description"),
                severity=cve.get("metrics", {}).get("cvssMetricV2", [{}])[0].get("baseSeverity", "Unknown"),
                cvss_score=cve.get("metrics", {}).get("cvssMetricV2", [{}])[0].get("cvssData", {}).get("baseScore", 0.0),
                published_date=cve.get("published", "Unknown"),
                last_modified=cve.get("lastModified", "Unknown"))

        print("✅ Vulnerabilities inserted successfully!")

if __name__ == "__main__":
    importer = VulnerabilityImporter(NEO4J_URI, NEO4J_USER, NEO4J_PASSWORD)
    importer.insert_vulnerabilities()
    importer.close()
